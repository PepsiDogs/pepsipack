{
	"credit": "Made with Blockbench",
	"textureSize": [64, 32],
	"models": [
		{
			"part": "headwear",
			"id": "headwear",
			"invertAxis": "xy",
			"translate": [0, -24, 0],
			"boxes": [
				{"coordinates": [-4, 24, -4, 8, 8, 8], "textureOffset": [0, 0]},
				{"coordinates": [-4, 24, -4, 8, 8, 8], "textureOffset": [32, 0], "sizeAdd": 0.25}
			]
		},
		{
			"part": "head",
			"id": "head",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"submodels": [
				{
					"id": "Created_by_FreshLX_for_Fresh_Animations",
					"invertAxis": "xy",
					"translate": [0, 0, 0]
				}
			],
			"animations": [
				{
					"head.rx": "sin((limb_swing/2+age)/80*pi*2-torad(90))/40 +(head_pitch/57.5)/1.4 +clamp((head_yaw/57.5)/4, 0, torad(90)) +clamp(-(head_yaw/57.5)/4, 0, torad(90)) -(sin(pi*2*swing_progress)/3)",
					"head.ry": "(head_yaw/57.5)/1.2 +clamp((head_pitch/57.5)/4, torad(-90), 0) +clamp(-(head_pitch/57.5)/4, torad(-90), 0)",
					"head.rz": "clamp(torad(5)-limb_speed/2, 0, torad(5))  +sin(torad( 45)+limb_swing/1.3)/15*limb_speed +sin(torad(-45)+limb_swing/1.3)/10*limb_speed +(head_yaw/57.5)/4 +(sin(pi*swing_progress)/3)",
					"head.tx": "sin(torad(45)+limb_swing/1.3)/2*limb_speed +(sin(pi*swing_progress)*3)",
					"head.ty": "sin((limb_swing/2+age)/80* pi*2)/4 +sin(torad(135)+limb_swing/0.65)*limb_speed +clamp((head_yaw/57.5)/4 +(head_pitch/57.5)*2, torad(-90), 0) +clamp(-(head_yaw/57.5)/4 -(head_pitch/57.5)*2, torad(-90), 0) +if(is_riding, -3, 0.4) +(sin(pi*swing_progress)*2)",
					"head.tz": "sin((limb_swing/2+age)/80*-pi*2)/4 +(sin(-pi*swing_progress)*4) +if(is_riding, -3, 0)",
					"headwear.rx": "head.rx",
					"headwear.ry": "head.ry",
					"headwear.rz": "head.rz",
					"headwear.tx": "head.tx",
					"headwear.ty": "head.ty",
					"headwear.tz": "head.tz",
					"body.ry": "if(left_arm.ry>=torad(10), torad(-70), right_arm.ry<=torad(-10), torad(70),0, clamp(torad(-15)+limb_speed, torad(-15), 0))) +sin(torad(180)+limb_swing/1.3)/4*limb_speed +(sin(-pi*swing_progress)/4)",
					"body.rx": "sin((limb_swing/2+age)/80*pi*2)/40 +torad(10)*limb_speed +(sin(pi*swing_progress)/3) +if(is_riding, torad(15), 0)",
					"body.rz": "head.rz -clamp(torad(5)-limb_speed/2, 0, torad(5)) -(head_yaw/57.5)/4 -(sin(torad(-45)+limb_swing/1.3)/10*limb_speed) -(sin(pi*swing_progress)/4)",
					"body.tx": "head.tx",
					"body.ty": "head.ty -(clamp((head_yaw/57.5)/4 +(head_pitch/57.5)*2, torad(-90), 0) +clamp(-(head_yaw/57.5)/4 -(head_pitch/57.5)*2, torad(-90), 0))",
					"body.tz": "head.tz"
				},
				{
					"right_arm.rx": "if(right_arm.rx<=torad(-80), if(body.ry<=torad(-30), torad(-100), body.ry>=torad(30), torad(-90 ),  (head_yaw/57.5)/8 +sin(torad(180)+limb_swing/1.3)/6*limb_speed +sin(torad(90)+limb_swing/0.65)/6*limb_speed +clamp(torad(-135)*limb_speed, torad(-90), 0)) torad(-8 ),  (head_yaw/57.5)/8 +sin(torad(180)+limb_swing/1.3)*limb_speed) +0, sin((limb_swing/2+age)/80*pi*2-torad(60))/20) -(sin(pi*2*swing_progress))",
					"left_arm.rx": " if( left_arm.rx<=torad(-80), if(body.ry<=torad(-30), torad(-90 ), body.ry>=torad(30), torad(-100), -(head_yaw/57.5)/8 +sin(torad( 0 )+limb_swing/1.3)/6*limb_speed +sin(torad(90)+limb_swing/0.65)/6*limb_speed +clamp(torad(-135)*limb_speed, torad(-90), 0)) torad(-35), -(head_yaw/57.5)/8 +sin(torad( 0 )+limb_swing/1.3)*limb_speed) +0, sin((limb_swing/2+age)/80*pi*2-torad(60))/20) +(sin(pi*swing_progress)*2)",
					"right_arm.ry": "if(right_arm.ry<=torad(-20), torad(-20), right_arm.ry>=torad(-20), 0, body.ry +sin((limb_swing/2+age)/80*pi*2+torad(90))/20) +(sin(-pi/2*swing_progress*2)/4)",
					"left_arm.ry": " if( left_arm.ry>=torad( 20), torad( 20),  left_arm.ry<=torad( 20), 0, body.ry +sin((limb_swing/2+age)/80*pi*2-torad(90))/20)",
					"right_arm.rz": "if(body.ry<=torad(-30), torad(-8), body.ry>=torad(30), torad(-5), is_riding, torad( 35), torad( 5) +if(is_in_water, torad( 10), 0) +clamp(-(head_pitch/57.5)/8, 0, torad( 45)) ) +(sin(-pi+torad(90)*swing_progress*2))",
					"left_arm.rz": " if(body.ry<=torad(-30), torad( 5), body.ry>=torad(30), torad( 8), is_riding, torad( 10), torad(-5) +if(is_in_water, torad(-10), 0) +clamp( (head_pitch/57.5)/8, torad(-45), 0) ) -(sin(pi*swing_progress))",
					"right_arm.tx": "if(body.ry<=torad(-30), -1, body.ry>=torad(30), -4, -5 +body.tx) +(sin(pi*swing_progress)*2)",
					"left_arm.tx": " if(body.ry<=torad(-30),  4, body.ry>=torad(30),  1,  5 +body.tx) -(sin(pi*swing_progress)*2)",
					"right_arm.ty": "if(body.ry<=torad(-30)||body.ry>=torad(30), 2, 2.5 +sin((limb_swing/2+age)/80*pi*2-torad(60))/5) +body.ty",
					"left_arm.ty": " if(body.ry<=torad(-30)||body.ry>=torad(30), 2, 2.5 +sin((limb_swing/2+age)/80*pi*2-torad(60))/5) +body.ty +if(is_riding, 1, 0)",
					"right_arm.tz": "if(body.ry<=torad(-30), -6, body.ry>=torad(30), -1, -0.5 +0, clamp(-1+limb_speed, -1, 0)) +sin(torad(135+90)+limb_swing/1.3)*2*limb_speed +sin((limb_swing/2+age)/80*-pi*2)/4) -(sin(pi*swing_progress)*6)",
					"left_arm.tz": " if(body.ry<=torad(-30), -1, body.ry>=torad(30), -6, -0.5 +0, clamp( 1-limb_speed,  0, 1)) +sin(torad(-45+90)+limb_swing/1.3)*2*limb_speed +sin((limb_swing/2+age)/80*-pi*2)/4) "
				},
				{
					"right_leg.rx": "if(is_riding, torad(-80), if(body.ry<=torad(-30)||body.ry>=torad(30), 0, clamp(sin(torad( 0 )+limb_swing/1.3)/6 +sin(torad( 0 )+limb_swing/1.3)/1.5*limb_speed +torad(10)*limb_speed, torad(-60), torad(60))) +sin((limb_swing/2+age)/80*pi*2)/40)",
					"left_leg.rx": " if(is_riding,  torad(-80), if(body.ry<=torad(-30)||body.ry>=torad(30), 0, clamp(sin(torad(180)+limb_swing/1.3)/6 +sin(torad(180)+limb_swing/1.3)/1.5*limb_speed +torad(10)*limb_speed, torad(-60), torad(60))) +sin((limb_swing/2+age)/80*pi*2)/40)",
					"right_leg.ry": "if(body.ry<=torad(-30), torad(-10 +if(is_riding,  20, 0)), body.ry>=torad(30), torad(60 +if(is_riding,   0, 0)), if(is_riding, torad( 20), clamp(torad( 20)-limb_speed, 0, torad( 20))))",
					"left_leg.ry": " if(body.ry<=torad(-30), torad(-60 +if(is_riding, - 0, 0)), body.ry>=torad(30), torad(10 +if(is_riding, -20, 0)), if(is_riding,  torad(-20), clamp(torad(-20)+limb_speed, torad(-20), 0)))",
					"right_leg.rz": "if(is_riding, 0, clamp(torad( 5)-limb_speed/2, 0, torad( 5)) +if(body.ry<=torad(-30)||body.ry>=torad(30), clamp(sin(torad( 0 )+limb_swing/1.3)/6 +sin(torad( 0 )+limb_swing/1.3)/1.5*limb_speed +torad(10)*limb_speed, torad(-60), torad(60)), 0))",
					"left_leg.rz": " if(is_riding,  0, clamp(torad(-5)+limb_speed/2, torad(-5), 0) +if(body.ry<=torad(-30)||body.ry>=torad(30), clamp(sin(torad(180)+limb_swing/1.3)/6 +sin(torad(180)+limb_swing/1.3)/1.5*limb_speed +torad(10)*limb_speed, torad(-60), torad(60)), 0))",
					"right_leg.tx": "if(body.ry<=torad(-30)||body.ry>=torad(30), -0.5 +if(is_riding, -3, 0), -2) +if(body.ry<=torad(-30)||body.ry>=torad(30), 0, -sin((limb_swing/2+age)/80*pi*2)/10) +if(is_riding, -1, 0)",
					"left_leg.tx": " if(body.ry<=torad(-30)||body.ry>=torad(30),  0.5 +if(is_riding, -3, 0),  2) +if(body.ry<=torad(-30)||body.ry>=torad(30), 0,  sin((limb_swing/2+age)/80*pi*2)/10) +if(is_riding,  1, 0)",
					"right_leg.ty": "if(body.ry<=torad(-30)||body.ry>=torad(30), 12.2 +if(is_riding, 1, 0), 0.2 +clamp(12 +sin(torad( 90)+limb_swing/1.3)*4*limb_speed +limb_speed, 0, 12.2) -0) +if(is_riding, -4.5, 0)",
					"left_leg.ty": " if(body.ry<=torad(-30)||body.ry>=torad(30), 12.2 +if(is_riding, 1, 0), 0.2 +clamp(12 +sin(torad(-90)+limb_swing/1.3)*4*limb_speed +limb_speed, 0, 12.2) -0) +if(is_riding, -4.5, 0)",
					"right_leg.tz": "if(body.ry<=torad(-30), -2 +if(is_riding, -2, 0), body.ry>=torad(30),  2 +if(is_riding, -2, 0), if(is_riding, 0, clamp(-0.5+limb_speed/2, -0.5, 0)) +clamp((sin(torad( 90)+limb_swing/1.3)*6)*limb_speed +(3*limb_speed), -6, 2*limb_speed) -0.2) +if(is_riding, 0, sin((limb_swing/2+age)/80*pi*2+torad(180))/3)",
					"left_leg.tz": " if(body.ry<=torad(-30),  2 +if(is_riding, -2, 0), body.ry>=torad(30), -2 +if(is_riding, -2, 0), if(is_riding, 0, clamp( 0.5-limb_speed/2,  0, 0.5)) +clamp((sin(torad(-90)+limb_swing/1.3)*6)*limb_speed +(3*limb_speed), -6, 2*limb_speed) -0.2) +if(is_riding, 0, sin((limb_swing/2+age)/80*pi*2+torad(180))/4)"
				}
			]
		},
		{
			"part": "body",
			"id": "body",
			"invertAxis": "xy",
			"translate": [0, -24, 0],
			"attach": true,
			"boxes": [
				{"coordinates": [-4, 12, -2, 8, 12, 4], "textureOffset": [16, 16]}
			]
		},
		{
			"part": "left_arm",
			"id": "left_arm",
			"invertAxis": "xy",
			"mirrorTexture": "u",
			"translate": [5, -22, 0],
			"boxes": [
				{"coordinates": [-6, 12, -1, 2, 12, 2], "textureOffset": [40, 16]}
			]
		},
		{
			"part": "right_arm",
			"id": "right_arm",
			"invertAxis": "xy",
			"translate": [-5, -22, 0],
			"boxes": [
				{"coordinates": [4, 12, -1, 2, 12, 2], "textureOffset": [40, 16]}
			]
		},
		{
			"part": "left_leg",
			"id": "left_leg",
			"invertAxis": "xy",
			"mirrorTexture": "u",
			"translate": [2, -12, -0.1],
			"boxes": [
				{"coordinates": [-3, 0, -1, 2, 12, 2], "textureOffset": [0, 16]}
			]
		},
		{
			"part": "right_leg",
			"id": "right_leg",
			"invertAxis": "xy",
			"translate": [-2, -12, -0.1],
			"boxes": [
				{"coordinates": [1, 0, -1, 2, 12, 2], "textureOffset": [0, 16]}
			]
		}
	]
}