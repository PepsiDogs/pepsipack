{
	"credit": "Made with Blockbench",
	"textureSize": [64, 64],
	"models": [
		{
			"part": "head",
			"id": "head",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"submodels": [
				{
					"id": "Created_by_FreshLX_for_Fresh_Animations",
					"invertAxis": "xy",
					"translate": [0, 0, 0]
				}
			],
			"animations": [
				{
					"right_sleeve.rx": "right_sleeve.rx-sin(swing_progress)*2",
					"left_sleeve.rx": "  left_sleeve.rx-sin(swing_progress)*2",
					"charge_right.rx": "if(right_sleeve.rx<torad(-90) && ( left_sleeve.rx-(right_pants.rx/1.4))>torad(-90), 1, 0)",
					"charge_left.rx": " if( left_sleeve.rx<torad(-90) && (right_sleeve.rx-( left_pants.rx/1.4))>torad(-90), 1, 0)",
					"look.rx": "clamp(-4.5 +cos((age+limb_swing)/80)*6, 0, 1)"
				},
				{
					"head.rx": "torad(head_pitch) -sin(pi*2*swing_progress)/5 +if(charge_right.rx==1||charge_left.rx==1, torad(-5), 0) +clamp(torad(head_yaw)/4, 0, torad(90)) +clamp(-torad(head_yaw)/4, 0, torad(90))",
					"head.ry": "torad(head_yaw)/1.2 +if(charge_left.rx==1, -sin(pi*swing_progress)/6, sin(pi*swing_progress)/6) +sin(           (age+limb_swing)/10 +sin(torad(45)+(age+limb_swing)/5)/2)/3 *look.rx",
					"head.rz": "torad(head_yaw)/4   +if(charge_left.rx==1, -sin(pi*swing_progress)/6, sin(pi*swing_progress)/6) +sin(torad(-45)+(age+limb_swing)/10 +sin(          (age+limb_swing)/5)/2)/10*look.rx",
					"head.tx": "if(charge_right.rx==1, 1 +sin(pi*swing_progress), charge_left.rx==1, -1 -sin(pi*swing_progress), sin(pi*swing_progress)) +if(is_riding, 0.5, clamp( 0.7-limb_speed*2,  0, 0.7)*if(charge_right.rx==1||charge_left.rx==1, 0, 1)) +sin(torad( 45)+limb_swing/1.6     )  *clamp(limb_speed*1.5, 0, 1)/1.2",
					"head.ty": " 0.8 +sin(age/10+limb_swing/3)/2 +sin(pi*swing_progress)*2 +if(is_riding, -1, 0) +sin(torad(135)+limb_swing/1.6*2 -cos(torad(135)+limb_swing/1.6*2)/3)*1.5*clamp(limb_speed*1.5, 0, 1)",
					"head.tz": "-1.5 -sin(age/10+limb_swing/3)/2 -sin(pi*swing_progress)   +if(charge_right.rx==1||charge_left.rx==1, 2, -1)",
					"headwear.rx": "head.rx",
					"headwear.ry": "head.ry",
					"headwear.rz": "head.rz",
					"headwear.tx": "head.tx",
					"headwear.ty": "head.ty",
					"headwear.tz": "head.tz",
					"body.rx": "torad(10) +sin(age/10+limb_swing/3)/20                                                                +if(charge_right.rx==1||                                      charge_left.rx==1, torad(-10) +sin(pi*swing_progress)/2,  sin(pi*swing_progress)/3)",
					"body.ry": "if(charge_right.rx==1||charge_left.rx==1, 0, clamp(torad(-15)+limb_speed, torad(-15), 0)) +if(charge_right.rx==1, torad( 25) -sin(pi*swing_progress)  , charge_left.rx==1, torad(-25) +sin(pi*swing_progress)  , -sin(pi*swing_progress)/3) -sin(limb_swing/1.6)/3 *clamp(limb_speed*1.5, 0, 1)/1.2 +torad(head_yaw)/6",
					"body.rz": "head.rz                                                                                               +if(charge_right.rx==1, torad( 5 ) -sin(pi*swing_progress)/9, charge_left.rx==1, torad(-5 ) +sin(pi*swing_progress)/9, -sin(pi*swing_progress)/6) +sin(limb_swing/1.6)/10*clamp(limb_speed*1.5, 0, 1)/1.2 -torad(head_yaw)/4 -sin(torad(-45)+(age+limb_swing)/10 +sin((age+limb_swing)/5)/2)/10*look.rx",
					"body.tx": "head.tx",
					"body.ty": "head.ty -(sin(torad(135)+limb_swing/1.6*2 -cos(torad(135)+limb_swing/1.6*2)/3)*1.5*clamp(limb_speed*1.5, 0, 1)) +sin(torad(160)+limb_swing/1.6*2 -cos(torad(160)+limb_swing/1.6*2)/3)*1.5*clamp(limb_speed*1.5, 0, 1)",
					"body.tz": "head.tz +if(charge_right.rx==1||charge_left.rx==1, 0, 1)"
				},
				{
					"right_arm.rx": "if(charge_right.rx==1||charge_left.rx==1, 0, clamp(torad(-20)+limb_speed, torad(-20), 0)) +if(charge_right.rx==1, torad(-120) +torad(-25)*limb_speed -torad(head_yaw)/2 -sin(limb_swing/1.6)/4*clamp(limb_speed*1.5, 0, 1)/1.2, if(is_riding, if(charge_left.rx==1, torad(-45), 0),     -sin(limb_swing/1.6)/1.5*clamp(limb_speed*1.5, 0, 1)   )) +torad(head_yaw)/8 +if(charge_right.rx==1||charge_left.rx==1, (sin(pi*swing_progress)*if(charge_right.rx==1, 2, 1)), -sin(pi*swing_progress*2))",
					"left_arm.rx": " if(charge_right.rx==1||charge_left.rx==1, 0, clamp(torad( 10)-limb_speed, 0, torad( 10))) +if( charge_left.rx==1, torad(-120) +torad(-25)*limb_speed -torad(head_yaw)/2 +sin(limb_swing/1.6)/4*clamp(limb_speed*1.5, 0, 1)/1.2, if(is_riding, if(charge_left.rx==1, 0, torad(-45)),      sin(limb_swing/1.6)/1.5*clamp(limb_speed*1.5, 0, 1)   )) -torad(head_yaw)/8 +if(charge_right.rx==1||charge_left.rx==1, (sin(pi*swing_progress)*if(charge_right.rx==1, 1, 2)),  sin(pi*swing_progress  ))",
					"right_arm.ry": "if(charge_right.rx==1||charge_left.rx==1, 0, clamp(torad(-25)+limb_speed, torad(-25), 0)) +if(charge_right.rx==1, torad( 10 ) +torad( 25)*limb_speed +torad(head_yaw)/1.5, if( charge_left.rx==1, torad(-30),             if(is_riding, if(charge_left.rx==1, 0, torad( 30)), 0)) -sin(limb_swing/1.6)/2  *clamp(limb_speed*1.5, 0, 1)/1.2) +sin(age/10+limb_swing/3+torad(90))/10 -(sin(pi/2*swing_progress*2)/2)*if(charge_right.rx==1, clamp(limb_speed*2, 1, 2), 1)",
					"left_arm.ry": " if(charge_right.rx==1||charge_left.rx==1, 0, clamp(torad( 10)-limb_speed, 0, torad( 10))) +if( charge_left.rx==1, torad(-10 ) +torad(-25)*limb_speed +torad(head_yaw)/1.5, if(charge_right.rx==1, torad( 30),             if(is_riding, if(charge_left.rx==1, torad( 30), 0), 0)) -sin(limb_swing/1.6)/2  *clamp(limb_speed*1.5, 0, 1)/1.2) +sin(age/10+limb_swing/3-torad(90))/10 +(sin(pi/2*swing_progress*2)/2)*if(charge_right.rx==1, 1, clamp(limb_speed*2, 1, 2))",
					"right_arm.rz": "torad( 10) +if(charge_right.rx==1, torad(-30), -sin(limb_swing/1.6)/5*clamp(limb_speed*1.5, 0, 1)/1.2) -torad(head_pitch)/14 +if(charge_left.rx==1, -(sin(pi*swing_progress  )/2), -(sin(pi*swing_progress*2)/4))",
					"left_arm.rz": " torad(-10) +if( charge_left.rx==1, torad( 30), -sin(limb_swing/1.6)/5*clamp(limb_speed*1.5, 0, 1)/1.2) +torad(head_pitch)/14 +if(charge_left.rx==1, -(sin(pi*swing_progress*2)/4), -(sin(pi*swing_progress  )/2))",
					"right_arm.tx": "-5 +body.tx +if(charge_right.rx==1, -1,  charge_left.rx==1, sin(limb_swing/1.6)*clamp(limb_speed*1.5, 0, 1)/1.2 +limb_speed, 0) +sin(pi*swing_progress)*if(charge_right.rx==1||charge_left.rx==1, 2, 0)",
					"left_arm.tx": "  5 +body.tx +if( charge_left.rx==1,  1, charge_right.rx==1, sin(limb_swing/1.6)*clamp(limb_speed*1.5, 0, 1)/1.2 -limb_speed, 0) -sin(pi*swing_progress)*if(charge_right.rx==1||charge_left.rx==1, 2, 0)",
					"right_arm.ty": "2 +body.ty +sin(age/10+limb_swing/3-torad(60))/3 +if(charge_right.rx==1, -1 -1*limb_speed, 0) +if(is_riding, 0.5, 0) +if(charge_right.rx==1||charge_left.rx==1, sin(pi*swing_progress), 0)",
					"left_arm.ty": " 2 +body.ty +sin(age/10+limb_swing/3-torad(60))/3 +if( charge_left.rx==1, -1 -1*limb_speed, 0) +if(is_riding, 0.5, 0) +if(charge_right.rx==1||charge_left.rx==1, sin(pi*swing_progress), 0)",
					"right_arm.tz": "-1 +clamp(-1+limb_speed*3, -1, 0) -sin(limb_swing/1.6)*3*clamp(limb_speed*1.5, 0, 1)/1.2 -sin(age/10+limb_swing/3)/2 +torad(head_yaw) +if(charge_right.rx==1,  2 -sin(pi*swing_progress)*6, charge_left.rx==1, 1 -limb_speed*2 +sin(pi*swing_progress)*6, clamp(-1+limb_speed*3, -1, 0) -sin(pi*swing_progress)*2)",
					"left_arm.tz": " -1 +clamp( 1-limb_speed*3,  0, 1) +sin(limb_swing/1.6)*3*clamp(limb_speed*1.5, 0, 1)/1.2 -sin(age/10+limb_swing/3)/2 -torad(head_yaw) +if(charge_right.rx==1, -1 +sin(pi*swing_progress)*6, charge_left.rx==1, 2               -sin(pi*swing_progress)*6, clamp( 1-limb_speed*3,  0, 1) +sin(pi*swing_progress)*2) +if(!(charge_right.rx==1||charge_left.rx==1)&&is_riding, -3, 0)"
				},
				{
					"right_leg.rx": "if(is_riding, right_leg.rx, clamp(torad(-10)+limb_speed  , torad(-10), 0) +(torad(2)+sin(torad( 20)+age/10+limb_swing/3)/20) +sin(limb_swing/1.6)/1.3*clamp(limb_speed*1.5, 0, 1) +torad(10)*clamp(limb_speed*1.5, 0, 1)) -torad(head_yaw)/30 +if(charge_left.rx==1, -sin(pi*swing_progress)/5, -sin(pi*swing_progress)/5)",
					"left_leg.rx": " if(is_riding,  left_leg.rx, clamp(torad( 15)-limb_speed  , 0, torad( 15)) +(torad(2)+sin(torad(-20)+age/10+limb_swing/3)/20) -sin(limb_swing/1.6)/1.3*clamp(limb_speed*1.5, 0, 1) +torad(10)*clamp(limb_speed*1.5, 0, 1)) +torad(head_yaw)/30 +if(charge_left.rx==1, -sin(pi*swing_progress)/5, -sin(pi*swing_progress)/5)",
					"right_leg.ry": "if(is_riding, right_leg.ry, clamp(torad(  5)-limb_speed  , 0, torad(  5))) +torad( 5)*clamp(limb_speed*1.5, 0, 1) +if(charge_right.rx==1, torad( 20)*limb_speed, charge_left.rx==1,         0            , 0)",
					"left_leg.ry": " if(is_riding,  left_leg.ry, clamp(torad(-40)+limb_speed*2, torad(-40), 0)) +torad(-5)*clamp(limb_speed*1.5, 0, 1) +if(charge_right.rx==1,         0            , charge_left.rx==1, torad(-20)*limb_speed, 0)",
					"right_leg.rz": "if(is_riding, right_leg.rz,                                             +torad( 3)) +sin(limb_swing/1.6)/8*clamp(limb_speed*1.5, 0, 1)/1.2 +if(charge_right.rx==1, -sin(pi*swing_progress)/8 +sin(limb_swing/1.6)/3*clamp(limb_speed*1.5, 0, 1) +torad( 5)*limb_speed, charge_left.rx==1, sin(pi*swing_progress)/8 +torad(3)*clamp(limb_speed*1.5, 0, 1)                                   , -sin(pi*swing_progress)/8) +if(charge_right.rx==1||charge_left.rx==1, sin(torad(45)+limb_swing/1.6)/12 -sin(limb_swing/1.6)/6, 0)",
					"left_leg.rz": " if(is_riding,  left_leg.rz, clamp(torad(-15)+limb_speed, torad(-15), 0) +torad(-3)) +sin(limb_swing/1.6)/8*clamp(limb_speed*1.5, 0, 1)/1.2 +if(charge_right.rx==1, -sin(pi*swing_progress)/8 +torad(-3)*clamp(limb_speed*1.5, 0, 1)                                  , charge_left.rx==1, sin(pi*swing_progress)/8 +sin(limb_swing/1.6)/3*clamp(limb_speed*1.5, 0, 1) +torad(-5)*limb_speed, -sin(pi*swing_progress)/8) +if(charge_right.rx==1||charge_left.rx==1, sin(torad(45)+limb_swing/1.6)/12 -sin(limb_swing/1.6)/6, 0)",
					"right_leg.tx": "-2                                  +if(is_riding, 0, if(charge_left.rx==1, sin(pi*swing_progress), -sin(pi*swing_progress)))                                        +if(charge_right.rx==1||charge_left.rx==1, sin(torad(45)+limb_swing/1.6)/2 -sin(limb_swing/1.6), 0) +if(charge_right.rx==1, clamp( 2 +cos(limb_swing/1.6)*6*clamp(limb_speed*1.5, 0, 1), -6, 1)/4, charge_left.rx==1, 0, 0)",
					"left_leg.tx": "  2 +clamp(0.5-limb_speed*2, 0, 0.5) +if(is_riding, 1, if(charge_left.rx==1, sin(pi*swing_progress), -sin(pi*swing_progress)) +sin(torad(-20)+age/10+limb_swing/3)/3) +if(charge_right.rx==1||charge_left.rx==1, sin(torad(45)+limb_swing/1.6)/2 -sin(limb_swing/1.6), 0) +if(charge_right.rx==1, 0, charge_left.rx==1, clamp(-2 +cos(limb_swing/1.6)*6*clamp(limb_speed*1.5, 0, 1), -1, 6)/4, 0)",
					"right_leg.ty": "0.3 +clamp(12 +clamp( cos(limb_swing/1.6)*2*clamp(limb_speed*1.5, 0, 1), 0, 2) +cos(limb_swing/1.6)*2*clamp(limb_speed*1.5, 0, 1) -(1*clamp(-1+limb_speed*1.5, 0, 1)), 0, 12.2) +if(is_riding, -1.5, 0)",
					"left_leg.ty": " 0.3 +clamp(12 +clamp(-cos(limb_swing/1.6)*2*clamp(limb_speed*1.5, 0, 1), 0, 2) -cos(limb_swing/1.6)*2*clamp(limb_speed*1.5, 0, 1) -(1*clamp(-1+limb_speed*1.5, 0, 1)), 0, 12.2) +if(is_riding, -1.5, 0)",
					"right_leg.tz": "clamp(1 +cos(limb_swing/1.6)*6*clamp(limb_speed*1.5, 0, 1), -6, 1)*1.2 -0.2 +if(is_riding, 0, +torad(head_yaw)/2 -sin(torad( 20)+age/10+limb_swing/3)/2) +sin(pi*swing_progress)*2 +if(is_riding, 0, charge_right.rx==1, clamp(-1+limb_speed*4, -1, 0), charge_left.rx==1, clamp(-2+limb_speed*4, -2, 0), clamp(-2  +limb_speed*8, -2  , 0))",
					"left_leg.tz": " clamp(1 -cos(limb_swing/1.6)*6*clamp(limb_speed*1.5, 0, 1), -6, 1)*1.2 -0.2 +if(is_riding, 0, -torad(head_yaw)/2 -sin(torad(-20)+age/10+limb_swing/3)/3) +sin(pi*swing_progress)*2 +if(is_riding, 0, charge_right.rx==1, clamp(-1+limb_speed*4, -1, 0), charge_left.rx==1,                            0 , clamp(-0.6+limb_speed*2, -0.6, 0))"
				},
				{
					"eyes.tx": "clamp(-head_yaw/80 -sin(torad(45) +(age+limb_swing)/10)*look.rx, -0.25, 0.25)",
					"right_eye.sx": "if(charge_right.rx==1||charge_left.rx==1, 1.25 +sin(age/5+limb_swing/3)/4, 1)",
					"left_eye.sx": " if(charge_right.rx==1||charge_left.rx==1, 1.25 -sin(age/5+limb_swing/3)/4, 1)",
					"right_eye.sy": "if(charge_right.rx==1||charge_left.rx==1, 1.3 +cos(age/5+limb_swing/3)/4, 1)",
					"left_eye.sy": " if(charge_right.rx==1||charge_left.rx==1, 1.3 -cos(age/5+limb_swing/3)/4, 1)",
					"nose.ty": "-2 +cos(age+limb_swing)/10 *clamp(-1.5 +sin(age/10+limb_swing/2)*4 -cos(age/23+limb_swing/2)*4, 0, 1)",
					"nose.rx": "    sin(age+limb_swing)/12 *clamp(-1.5 +sin(age/10+limb_swing/2)*4 -cos(age/23+limb_swing/2)*4, 0, 1)",
					"right_ear2.rx": "-torad(5) -torad(head_pitch)/3 +torad(20)*clamp(limb_speed*3, 0, 1) +sin(torad(-45)+(age+limb_swing)/10 +sin(torad(-45+45)+(age+limb_swing)/5)/2)/3 *look.rx +sin(pi*swing_progress*2)/2",
					"left_ear2.rx": " -torad(5) -torad(head_pitch)/3 +torad(20)*clamp(limb_speed*3, 0, 1) -sin(torad(-45)+(age+limb_swing)/10 +sin(torad(-45+45)+(age+limb_swing)/5)/2)/3 *look.rx +sin(pi*swing_progress*2)/2",
					"right_ear2.ry": "torad(8)",
					"left_ear2.ry": "-torad(8)",
					"right_ear2.rz": "clamp(torad( 20) +cos(age/10+limb_swing/3)/8 -sin(limb_swing/1.6*2)/5*clamp(limb_speed*1.5, 0, 1) +if(limb_speed>=0.6, -sin(limb_swing/1.6)/4*clamp(limb_speed*1.5, 0, 1), 0) +clamp(torad(head_yaw)/4, 0, torad( 30))*clamp(1-limb_speed*2, 0, 1) +sin(pi*swing_progress*2), 0, torad( 180))",
					"left_ear2.rz": " clamp(torad(-20) -cos(age/10+limb_swing/3)/8 +sin(limb_swing/1.6*2)/5*clamp(limb_speed*1.5, 0, 1) +if(limb_speed>=0.6, -sin(limb_swing/1.6)/4*clamp(limb_speed*1.5, 0, 1), 0) +clamp(torad(head_yaw)/4, torad(-30), 0)*clamp(1-limb_speed*2, 0, 1) -sin(pi*swing_progress*2), torad(-180), 0)"
				}
			]
		},
		{
			"part": "headwear",
			"id": "headwear",
			"invertAxis": "xy",
			"translate": [0, -24, 0.25],
			"submodels": [
				{
					"id": "head2",
					"invertAxis": "xy",
					"translate": [0, 24, 0],
					"boxes": [
						{
							"coordinates": [-5, 0, -4, 10, 8, 8],
							"uvNorth": [8, 8, 18, 16],
							"uvEast": [0, 8, 8, 16],
							"uvSouth": [26, 8, 36, 16],
							"uvWest": [18, 8, 26, 16],
							"uvUp": [8, 0, 18, 8],
							"uvDown": [18, 8, 28, 0]
						}
					],
					"submodels": [
						{
							"id": "left_ear2",
							"invertAxis": "xy",
							"translate": [-5, 5.5, -0.5],
							"boxes": [
								{
									"coordinates": [-0.75, -4.5, -2, 1, 5, 4],
									"uvNorth": [55, 10, 56, 15],
									"uvEast": [51, 10, 55, 15],
									"uvSouth": [60, 10, 61, 15],
									"uvWest": [56, 10, 60, 15],
									"uvUp": [55, 6, 56, 10],
									"uvDown": [56, 10, 57, 6]
								}
							]
						},
						{
							"id": "right_ear2",
							"invertAxis": "xy",
							"translate": [5, 5.5, -0.5],
							"boxes": [
								{
									"coordinates": [-0.25, -4.5, -2, 1, 5, 4],
									"uvNorth": [43, 10, 44, 15],
									"uvEast": [39, 10, 43, 15],
									"uvSouth": [48, 10, 49, 15],
									"uvWest": [44, 10, 48, 15],
									"uvUp": [43, 6, 44, 10],
									"uvDown": [44, 10, 45, 6]
								}
							]
						},
						{
							"id": "nose",
							"invertAxis": "xy",
							"translate": [0, 2, -4],
							"boxes": [
								{
									"coordinates": [-2, -2, -1, 4, 4, 1],
									"uvNorth": [32, 2, 36, 6],
									"uvEast": [31, 2, 32, 6],
									"uvSouth": [37, 2, 41, 6],
									"uvWest": [36, 2, 37, 6],
									"uvUp": [32, 1, 36, 2],
									"uvDown": [36, 2, 40, 1]
								},
								{
									"coordinates": [-3, -2, -1, 1, 2, 1],
									"uvNorth": [3, 5, 4, 7],
									"uvEast": [2, 5, 3, 7],
									"uvSouth": [5, 5, 6, 7],
									"uvWest": [4, 5, 5, 7],
									"uvUp": [3, 4, 4, 5],
									"uvDown": [4, 5, 5, 4]
								},
								{
									"coordinates": [2, -2, -1, 1, 2, 1],
									"uvNorth": [3, 1, 4, 3],
									"uvEast": [2, 1, 3, 3],
									"uvSouth": [5, 1, 6, 3],
									"uvWest": [4, 1, 5, 3],
									"uvUp": [3, 0, 4, 1],
									"uvDown": [4, 1, 5, 0]
								}
							]
						},
						{
							"id": "eyes",
							"invertAxis": "xy",
							"translate": [0, 4.5, 0],
							"submodels": [
								{
									"id": "right_eye",
									"invertAxis": "xy",
									"translate": [2, 0, -4],
									"boxes": [
										{
											"coordinates": [0, -0.5, -0.03, 1, 1, 0.25],
											"uvNorth": [13, 17, 14, 18],
											"uvEast": [13, 17, 14, 18],
											"uvSouth": [13, 17, 14, 18],
											"uvWest": [13, 17, 14, 18],
											"uvUp": [14, 18, 13, 17],
											"uvDown": [14, 18, 13, 17]
										}
									]
								},
								{
									"id": "left_eye",
									"invertAxis": "xy",
									"translate": [-2, 0, -4],
									"boxes": [
										{
											"coordinates": [-1, -0.5, -0.03, 1, 1, 0.25],
											"uvNorth": [15, 17, 16, 18],
											"uvEast": [15, 17, 16, 18],
											"uvSouth": [15, 17, 16, 18],
											"uvWest": [15, 17, 16, 18],
											"uvUp": [16, 18, 15, 17],
											"uvDown": [16, 18, 15, 17]
										}
									]
								}
							]
						},
						{
							"id": "charge_right",
							"invertAxis": "xy",
							"translate": [0, 0, 0]
						},
						{
							"id": "charge_left",
							"invertAxis": "xy",
							"translate": [0, 0, 0]
						},
						{
							"id": "look",
							"invertAxis": "xy",
							"translate": [0, 0, 0]
						}
					]
				}
			]
		},
		{
			"part": "body",
			"id": "body",
			"invertAxis": "xy",
			"translate": [0, -24, 0],
			"boxes": [
				{
					"coordinates": [-4, 12, -2, 8, 12, 4],
					"uvNorth": [20, 20, 28, 32],
					"uvEast": [16, 20, 20, 32],
					"uvSouth": [32, 20, 40, 32],
					"uvWest": [28, 20, 32, 32],
					"uvUp": [20, 16, 28, 20],
					"uvDown": [28, 20, 36, 16]
				}
			],
			"submodels": [
				{
					"id": "jacket2",
					"invertAxis": "xy",
					"translate": [0, 24, 0],
					"boxes": [
						{
							"coordinates": [-4, -12, -2, 8, 12, 4],
							"uvNorth": [20, 36, 28, 48],
							"uvEast": [16, 36, 20, 48],
							"uvSouth": [32, 36, 40, 48],
							"uvWest": [28, 36, 32, 48],
							"uvUp": [20, 32, 28, 36],
							"uvDown": [28, 36, 36, 32],
							"sizeAdd": 0.25
						}
					]
				}
			]
		},
		{
			"part": "left_arm",
			"id": "left_arm",
			"invertAxis": "xy",
			"translate": [5, -22, 0],
			"boxes": [
				{
					"coordinates": [-8, 12, -2, 4, 12, 4],
					"uvNorth": [36, 52, 40, 64],
					"uvEast": [32, 52, 36, 64],
					"uvSouth": [44, 52, 48, 64],
					"uvWest": [40, 52, 44, 64],
					"uvUp": [36, 48, 40, 52],
					"uvDown": [40, 52, 44, 48]
				},
				{
					"coordinates": [-8, 12, -2, 4, 12, 4],
					"uvNorth": [52, 52, 56, 64],
					"uvEast": [48, 52, 52, 64],
					"uvSouth": [60, 52, 64, 64],
					"uvWest": [56, 52, 60, 64],
					"uvUp": [52, 48, 56, 52],
					"uvDown": [56, 52, 60, 48],
					"sizeAdd": 0.25
				}
			]
		},
		{
			"part": "right_arm",
			"id": "right_arm",
			"invertAxis": "xy",
			"translate": [-5, -22, 0],
			"boxes": [
				{
					"coordinates": [4, 12, -2, 4, 12, 4],
					"uvNorth": [44, 20, 48, 32],
					"uvEast": [40, 20, 44, 32],
					"uvSouth": [52, 20, 56, 32],
					"uvWest": [48, 20, 52, 32],
					"uvUp": [44, 16, 48, 20],
					"uvDown": [48, 20, 52, 16]
				},
				{
					"coordinates": [4, 12, -2, 4, 12, 4],
					"uvNorth": [44, 36, 48, 48],
					"uvEast": [40, 36, 44, 48],
					"uvSouth": [52, 36, 56, 48],
					"uvWest": [48, 36, 52, 48],
					"uvUp": [44, 32, 48, 36],
					"uvDown": [48, 36, 52, 32],
					"sizeAdd": 0.25
				}
			]
		},
		{
			"part": "left_leg",
			"id": "left_leg",
			"invertAxis": "xy",
			"translate": [2, -12, 0],
			"boxes": [
				{
					"coordinates": [-4, 0, -2, 4, 12, 4],
					"uvNorth": [20, 52, 24, 64],
					"uvEast": [16, 52, 20, 64],
					"uvSouth": [28, 52, 32, 64],
					"uvWest": [24, 52, 28, 64],
					"uvUp": [20, 48, 24, 52],
					"uvDown": [24, 52, 28, 48]
				},
				{
					"coordinates": [-4, 0, -2, 4, 12, 4],
					"uvNorth": [4, 52, 8, 64],
					"uvEast": [0, 52, 4, 64],
					"uvSouth": [12, 52, 16, 64],
					"uvWest": [8, 52, 12, 64],
					"uvUp": [4, 48, 8, 52],
					"uvDown": [8, 52, 12, 48],
					"sizeAdd": 0.25
				}
			]
		},
		{
			"part": "right_leg",
			"id": "right_leg",
			"invertAxis": "xy",
			"translate": [-2, -12, 0],
			"boxes": [
				{
					"coordinates": [0, 0, -2, 4, 12, 4],
					"uvNorth": [4, 20, 8, 32],
					"uvEast": [0, 20, 4, 32],
					"uvSouth": [12, 20, 16, 32],
					"uvWest": [8, 20, 12, 32],
					"uvUp": [4, 16, 8, 20],
					"uvDown": [8, 20, 12, 16]
				},
				{
					"coordinates": [0, 0, -2, 4, 12, 4],
					"uvNorth": [4, 36, 8, 48],
					"uvEast": [0, 36, 4, 48],
					"uvSouth": [12, 36, 16, 48],
					"uvWest": [8, 36, 12, 48],
					"uvUp": [4, 32, 8, 36],
					"uvDown": [8, 36, 12, 32],
					"sizeAdd": 0.25
				}
			]
		},
		{
			"part": "left_ear",
			"id": "left_ear",
			"invertAxis": "xy",
			"translate": [0, 0, 0]
		},
		{
			"part": "right_ear",
			"id": "right_ear",
			"invertAxis": "xy",
			"translate": [0, 0, 0]
		},
		{
			"part": "jacket",
			"id": "jacket",
			"invertAxis": "xy",
			"translate": [0, 0, 0]
		},
		{
			"part": "left_sleeve",
			"id": "left_sleeve",
			"invertAxis": "xy",
			"translate": [0, 0, 0]
		},
		{
			"part": "right_sleeve",
			"id": "right_sleeve",
			"invertAxis": "xy",
			"translate": [0, 0, 0]
		},
		{
			"part": "left_pants",
			"id": "left_pants",
			"invertAxis": "xy",
			"translate": [0, 0, 0]
		},
		{
			"part": "right_pants",
			"id": "right_pants",
			"invertAxis": "xy",
			"translate": [0, 0, 0]
		}
	]
}